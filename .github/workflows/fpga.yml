
name: FPGA Build

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_call:
  workflow_dispatch:


jobs:
  check_cache:
    runs-on: ubuntu-22.04

    env:
      # Change this to a new random value if you suspect the cache is corrupted
      CACHE_BUSTER: 9ff0db888988

    outputs:
      rtl_cache_key: ${{ steps.cache_key.outputs.rtl_cache_key }}
      sysroot_cache_key: ${{ steps.cache_key.outputs.sysroot_cache_key }}
      rtl_cache_hit: ${{ steps.restore_rtl_cache.outputs.cache-hit }}
      sysroot_cache_hit: ${{ steps.restore_sysroot_cache.outputs.cache-hit }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'true'
  
      - name: Compute cache-keys
        id: cache_key
        run: |
          # Compute the key from the tree hash of the fpga directory and the caliptra-rtl
          # root directory.
          echo "rtl_cache_key=$(git rev-parse HEAD:hw-latest/fpga)-$(cd hw-latest/caliptra-rtl && git rev-parse HEAD:)-${{ env.CACHE_BUSTER }}" >> $GITHUB_OUTPUT

          echo "sysroot_cache_key=sysroot-v8-${{ env.CACHE_BUSTER }}" >> $GITHUB_OUTPUT

      - name: Get sysroot cache-key
        id: sysroot_cache_key
        run: |
          # Compute the key from the tree hash of the fpga directory and the caliptra-rtl
          # root directory.

      - name: Restore FPGA bitstream from cache
        uses: actions/cache/restore@v3
        id: restore_rtl_cache
        with:
          path: /tmp/caliptra-fpga-bitstream/caliptra_fpga.bin
          key: ${{ steps.cache_key.outputs.rtl_cache_key }}

      - name: 'Upload FPGA bitstream artifact'
        if: steps.restore_rtl_cache.outputs.cache-hit
        uses: actions/upload-artifact@v3
        with:
          name: caliptra-fpga-bitstream
          path: /tmp/caliptra-fpga-bitstream/caliptra_fpga.bin
          retention-days: 7

  build_test_binaries:
    runs-on: [e2-standard-32]
    timeout-minutes: 60

    env:
      # Change this to a new random value if you suspect the cache is corrupted
      CACHE_BUSTER: 9ff0db888988

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Restore sysroot from cache
        uses: actions/cache/restore@v3
        id: restore_sysroot_cache
        with:
          path: /tmp/caliptra-fpga-sysroot.tar
          key: sysroot-v9-${{ env.CACHE_BUSTER }}

      - name: Extract sysroot
        if: "steps.restore_sysroot_cache.outputs.cache-hit"
        run: |
          sudo tar xvf /tmp/caliptra-fpga-sysroot.tar

      - name: Install sysroot pre-requisites
        if: "!steps.restore_sysroot_cache.outputs.cache-hit"
        run: |
          sudo apt-get -y install debootstrap binfmt-support qemu-user-static u-boot-tools

      - name: build sysroot
        if: "!steps.restore_sysroot_cache.outputs.cache-hit"
        run: |
          sudo mkdir /tmp/caliptra-fpga-sysroot
          sudo debootstrap --include linux-libc-dev --arch arm64 --foreign bookworm /tmp/caliptra-fpga-sysroot
          sudo chroot /tmp/caliptra-fpga-sysroot /debootstrap/debootstrap --second-stage

          # Remove unnecesary files
          sudo find /tmp/caliptra-fpga-sysroot/ \( -type d -and ! -perm -o=r \) -prune -exec rm -rf {} \;
          sudo find /tmp/caliptra-fpga-sysroot/ \( -type d -and ! -perm -o=x \) -prune -exec rm -rf {} \;
          sudo find /tmp/caliptra-fpga-sysroot/ \( ! -perm -o=r \) -exec rm -f {} \;
          sudo find /tmp/caliptra-fpga-sysroot/ \( -type c -or -type b -or -type p -or -type s \) -exec rm -f {} \;

          sudo tar cvf /tmp/caliptra-fpga-sysroot.tar /tmp/caliptra-fpga-sysroot

      - name: Save FPGA sysroot to cache
        if: "!steps.restore_sysroot_cache.outputs.cache-hit"
        uses: actions/cache/save@v3
        with:
          path: /tmp/caliptra-fpga-sysroot.tar
          key: sysroot-v9-${{ env.CACHE_BUSTER }}

      - name: Install cross compiler
        run: |
          sudo apt-get install -y gcc-aarch64-linux-gnu
          rustup target add aarch64-unknown-linux-gnu

      - name: Build test binaries
        run: |
          cargo \
            --config "target.aarch64-unknown-linux-gnu.rustflags = [\"-C\", \"link-arg=--sysroot=/tmp/caliptra-fpga-sysroot\"]" \
            --config "target.aarch64-unknown-linux-gnu.linker = \"aarch64-linux-gnu-gcc\"" \
            test --release --no-run --target=aarch64-unknown-linux-gnu --message-format=json > /tmp/caliptra-cargo.json
          cat /tmp/caliptra-cargo.json | jq -r '.executable | select(. != null)' | while read line; do
            cp "$line" /tmp/caliptra-test-binaries/
          done
          cp /tmp/caliptra-cargo.json /tmp/caliptra-test-binaries/

      - name: 'Upload test binaries artifact'
        uses: actions/upload-artifact@v3
        with:
          name: caliptra-test-binaries
          path: /tmp/caliptra-test-binaries
          retention-days: 1

      - name: Build test firmware
        run: |
          mkdir /tmp/caliptra-test-firmware
          cargo run --release -p caliptra-builder -- --all_elfs /tmp/caliptra-test-firmware

      - name: 'Upload test firmware artifact'
        uses: actions/upload-artifact@v3
        with:
          name: caliptra-test-firmware
          path: /tmp/caliptra-test-firmware
          retention-days: 1

  build_bitstream:
    runs-on: [e2-standard-8, fpga-tools]
    timeout-minutes: 180
    needs: check_cache
    if: "!needs.check_cache.outputs.rtl_cache_hit"
  
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'true'
  
      - name: Mount FPGA tools
        run: |
          # This is an installation of Vivado 22.2 with support for Zynq Ultrascale+
          sudo mkdir /fpga-tools
          sudo mount UUID=be18f242-fb8d-4d99-971e-a8ae390ad620 /fpga-tools/
  
      - name: Build FPGA bitstream
        run: |
          cd hw-latest/fpga
          mkdir caliptra_build
          /fpga-tools/Xilinx/Vivado/2022.2/bin/vivado -mode batch -source fpga_configuration.tcl -tclargs BUILD=TRUE
          if [ ! -f caliptra_build/caliptra_fpga.bin ]; then
            echo "Output file was not found; failing script"
            exit 1
          fi

      - name: 'Upload FPGA bitstream artifact'
        uses: actions/upload-artifact@v3
        with:
          name: caliptra-fpga-bitstream
          path: hw-latest/fpga/caliptra_build/caliptra_fpga.bin

  cache_fpga_bitstream_artifact:
    runs-on: ubuntu-22.04
    needs: [check_cache, build_bitstream]
    if: "!needs.check_cache.outputs.rtl_cache_hit"

    # If we write to the cache from the self-hosted runner, the result is not
    # accessible from GitHub-hosted runners. So cache the artifact instead.

    steps:
      - name: 'Download FPGA Bitstream Artifact'
        uses: actions/download-artifact@v3
        with:
          name: caliptra-fpga-bitstream
          path: /tmp/caliptra-fpga-bitstream

      - name: Save FPGA bitstream to cache
        uses: actions/cache/save@v3
        with:
          path: /tmp/caliptra-fpga-bitstream/caliptra_fpga.bin
          key: ${{ needs.check_cache.outputs.rtl_cache_key }}

  test_artifacts:
    runs-on: caliptra-fpga
    needs: [check_cache, build_bitstream, build_test_binaries]
    if: always() && contains(needs.*.result, 'success') && !contains(needs.*.result, 'failure')
    steps:
      - name: 'Download FPGA Bitstream Artifact'
        uses: actions/download-artifact@v3
        with:
          name: caliptra-fpga-bitstream
          path: /tmp/caliptra-fpga

      - name: 'Download Test Binaries Artifact'
        uses: actions/download-artifact@v3
        with:
          name: caliptra-test-binaries
          path: /tmp/caliptra-test-binaries

      - name: 'Download Test Firmware Artifact'
        uses: actions/download-artifact@v3
        with:
          name: caliptra-test-firmware
          path: /tmp/caliptra-test-firmware

      - name: Show filesystem contents
        run: |
          # sha256sum /tmp/caliptra-fpga/caliptra_fpga.bin
          find /tmp/ -exec ls -lh "{}" \;
